services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: bank_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.4.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 1

  # small init service to create topics (runs once)
  init-topics:
    image: confluentinc/cp-kafka:7.4.1
    depends_on:
      - kafka
    entrypoint: >
      bash -c "
      echo 'Waiting for Kafka to be ready...' ;
      for i in {1..60}; do
        /usr/bin/kafka-topics --bootstrap-server kafka:9092 --list && break || sleep 1;
      done;
      /usr/bin/kafka-topics --bootstrap-server kafka:9092 --create --topic user.created --if-not-exists --replication-factor 1 --partitions 1 || true;
      /usr/bin/kafka-topics --bootstrap-server kafka:9092 --create --topic account.transfer --if-not-exists --replication-factor 1 --partitions 1 || true;
      echo 'Topics ensured.';
      sleep 2;
      "

  user-service:
    build: ./user-service
    ports:
      - "8081:8081"   # REST
      - "9090:9090"   # gRPC
    depends_on:
      - postgres
      - kafka
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/bank_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - JWT_SECRET=a2KBgACU+YdCWe56vns7nTW3ZVeq0Dt4+g4Z3CvT22Y=

  account-service:
    build: ./account-service
    ports:
      - "8082:8082"   # REST
    depends_on:
      - postgres
      - kafka
      - user-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/bank_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - JWT_SECRET=a2KBgACU+YdCWe56vns7nTW3ZVeq0Dt4+g4Z3CvT22Y=
      - GRPC_USER_SERVICE_ADDRESS=static://user-service:9090

volumes:
  pgdata:
